@use '@/app/styles/_variables.scss' as *;
@use '@/app/styles/_flexbox.scss' as flex;
@use '@/app/styles/_breakpoints.scss' as bp;
@use '@/app/styles/_classes.scss';

.default {
  @include flex.col(center, center);
  position: relative;
  border: none;
  background-color: transparent;
  height: $hero-height;

  a{
    position: relative;
    height: 100%;
    width: 100%;
  }
  img {
    object-fit: cover;
  }
  figcaption {
    position: absolute;
    color: $white;
    width: 50%;
    text-align: justify;
    font-size: clamp(1.5rem, 2vw, 2rem);
    border-left: 2px solid $white;
    text-transform: uppercase;
    text-shadow: $default-text-shadow;
  }
  @include bp.breakpoint(md, min) {
    figcaption {
      width: 28%;
    }
  }
}

.icon{
  position: relative;
  cursor: pointer;
  min-width: 32px;
  min-height: 32px;
  img {
    object-fit: contain;
    &:hover {
      transform: scale(1.05);
    }
  }
  figcaption{
    @extend .first-cap;
    position: absolute;
    font-size: 10px;
    bottom: -3*$default-padding-inset;
    left: -70%;
    width: max-content;
  }
}
.logo{
  @extend .default;
  flex: 0 0 40%;
  width: 100%;
  height: 100%;
  &:hover {
    transform: scale(1.065);
  }
  img {
    min-width: $logo-min-width;
    max-width: $logo-min-width;
    object-fit: fill;
    aspect-ratio: 1;
    &:hover {
      transform: scale(1.1);
    }
  }
  @include bp.breakpoint(md, min) {
    flex: 0 0 20%;
    img {
      object-fit: contain;
    }
  }
}
.error {
  @extend .default;
  width: 60%;
  margin: 0 auto;
  img {
    object-fit: contain;
  }
}
.card {
  position: relative;
  height: calc(100% - 3 * $default-padding-inset);
  width: calc(100% - 2 * $default-padding-inset);
  @include flex.col(center, center);
  gap: $default-padding-inset;
  margin-bottom: 2rem;
  text-align: left;

  img{
    position: relative !important;
    border-radius: 50%;
    min-width: 90px;
    min-height: 90px;
    max-width: 130px;
    max-height: 130px;

  }
  @include bp.breakpoint(md, min) {
    //@include flex.row(space-between, center);
    @include flex.row(space-between, center);
    width: 100%;
    gap: 3rem;
    padding: unset;
    text-align: center;
    img{
      flex: 0 0 30%;
      max-width: 30vmin;
      max-height: 30vmin;
    }
    figcaption {
      flex: 0 0 50%;
    }
  }
}

.services-banner{
  position: relative;
  aspect-ratio: 4/6;
  max-height: 455px;
  li{
    font-size: 80%;
  }
  @include bp.breakpoint(md, min) {
    aspect-ratio: 6/15;
    max-height: unset;
    li{
      font-size: 100%;
    }
  }
  @include bp.breakpoint(lg, min) {
    aspect-ratio: 5/6;
  }  

  figcaption {
    left: 50%;
    transform: translate(-50%, 10%);
    position: absolute;
    width: 60%;
    height: 65%;
    h3{
      text-align: center;
      color: $tertiary;
      text-shadow: $default-text-shadow;
      font-size: 90%;
    }
    span {
      @include flex.col(flex-start, center);
      border-left: 1px dashed $tertiary;
      border-right: 1px dashed $tertiary;
      padding: $default-padding-inset;
      height: stretch;
      width: 100%;
      position: absolute;

    }
    p{
      text-align: center;
      color: $white;
      text-shadow: $default-text-shadow;
      font-size: 70%;
    }
    a{
      @extend .first-cap;
      color: $tertiary;
      font-size: 1rem;
      font-weight: 600;
      text-align: center;
      display: block;
      text-decoration: underline;
      text-shadow: $default-text-shadow;
      transition: all 0.3s ease-in-out;
      &:hover {
        font-size:  1.1rem;
        cursor: pointer;
        text-shadow: $default-yellow-text-shadow;
      }
    }
  }
}
.noVideo{
  height: 100%;
  width: 100%;
  min-height: 20vh;
  min-width: 40vw;
  @include bp.breakpoint(md, min) {
    min-height: 40vh;
  }
}
