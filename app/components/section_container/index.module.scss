@use '@/app/styles/_breakpoints.scss' as bp;
@use '@/app/styles/_flexbox.scss' as flex;
@use '@/app/styles/_variables.scss' as *;
@use '@/app/styles/_classes.scss' as class;

.default{
    position: relative;
    width: 100%;
    height: 100%;
    min-height: 40vh;
    max-width: map-get($breakpoints, 'xxl');
    margin: 0 auto;
    @include flex.col(flex-start, center);
}

.page-container{
    @extend .default;
    width: 100%;
    height: 100dvh;
    min-height: 100dvh;
    padding: $page-padding;
}

.left-container{
    max-width: 50%;
    height: auto;
    position: relative;
    transition: all 0.3s ease-in-out;

    &_active{
    transition: all 0.3s ease-in-out;
        @include flex.col(center, center);
        max-width: 100%;
    }
}

.inner-container{
    @extend .default;
    overflow: auto;
    min-height: auto;
    justify-content: unset;
    align-items: unset;
    padding: unset;
    flex-grow: 1;
    //style scrollbar thumb color
    &::-webkit-scrollbar {
        width: 10px;
        height: 10px;
        background-color: transparent;
        &-thumb {
            background-color: $secondary-tint;
            border-radius: $default-border-radius;
            height: 10px;
        }

    }
}

.card {
    @include flex.col(flex-start, center);
    position: relative;
    height: 100%;
    width: 100%;
    max-height: 70vh;
    margin-bottom: 5vh;
    @include bp.breakpoint(md, min) {
        @include flex.row(flex-start, center);
        max-height: 40vh;
    }
}
//keymap__section
.keymap{
    border-top: 2px solid $secondary-tint;
    position: relative;
    padding: $default-padding-inset 0;
    width: calc(100% - 2*$default-padding-inset);
    @include flex.col(flex-start, center);
    @include bp.breakpoint(md, min) {
        @include flex.row(flex-start, center);
        width: 100%;
    }
    &>*{
        flex: 10% 0 50%;
        @include bp.breakpoint(md, min) {
            flex: 0 0 50%;
        }
        &:nth-last-child(1){
            width: 100%;
            @extend .font-cap-clamp;
            text-align: justify;
        }
    }
}

.paragraph {
    height: auto;
    width: 100%;
    position: relative;
    a{
        text-decoration: underline;
        underline-offset: 0.2rem;
        text-decoration-color: $secondary-tint;
        box-shadow: 0 3px 0 $secondary-tint;
        
    }
}
.row-container{
    @include flex.col(flex-start, center);
    gap: $default-padding;
    @include bp.breakpoint(md, min) {
        @include flex.row(flex-start, center);
        gap: 0;
    }
}
.col-container{
    @include flex.col(flex-start, center);
}
.contact-container {
  @extend .col-container;

}

.center{
  left: 50%;
  top: 30%;
  transform: translate(-50%, -50%);
  position: absolute;

}
.two-buttons {
  @include flex.row(space-around, center);
  margin-top: $default-padding-inset;
}

.banner-container{
    @extend .row-container;
    margin-top: $default-padding;
    border-top: 2px solid $secondary-tint;
    width: 100%;

    &>div{
        flex: 0 0 33%;
        width: 100%;
        height: 100%;
        min-height: 40vh;
        object-fit: contain!important;
    }
}

.grid-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 10px;
}
